on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.5.1

      # darwin
      - name: Build for darwin
        if: matrix.platform == 'macos-latest'
        run: |
          wails build -platform darwin/universal

      - name: Create darwin package
        if: matrix.platform == 'macos-latest'
        run: |
          pkgbuild --root build/bin --component-plist build/darwin/components.plist --identifier "me.reinii.ivy-git.pkg" --install-location /Applications ivy-git.pkg
          productbuild --package ivy-git.pkg "IvyGit_${{ github.ref_name }}_Darwin_Universal.pkg"

      - name: Upload darwin package
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: release-darwin
          path: IvyGit_${{ github.ref_name }}_Darwin_*
          retention-days: 2

      # windows
      - name: Build for windows
        if: matrix.platform == 'windows-latest'
        run: |
          wails build -platform windows/amd64 -nsis
          Compress-Archive -Path "$PWD\build\bin\Ivy Git.exe" -DestinationPath "$PWD\IvyGit_${{ github.ref_name }}_Windows_amd64.zip"
          Move-Item -Path "$PWD\build\bin\Ivy Git-amd64-installer.exe" -Destination "$PWD\IvyGit_${{ github.ref_name }}_Windows_amd64_installer.exe"

      - name: Upload windows zip and installer
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: release-windows
          path: IvyGit_${{ github.ref_name }}_Windows_*
          retention-days: 2

  release:
    runs-on: ubuntu-latest
    needs: build
    name: Release
    steps:
      - name: Download all release pacakges
        uses: actions/download-artifact@v3
        id: artifact
        with:
          path: releases

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            ${{steps.artifact.outputs.download-path}}/release-darwin/IvyGit_${{ github.ref_name }}_Darwin_Universal.pkg
            ${{steps.artifact.outputs.download-path}}/release-windows/IvyGit_${{ github.ref_name }}_Windows_amd64.zip
            ${{steps.artifact.outputs.download-path}}/release-windows/IvyGit_${{ github.ref_name }}_Windows_amd64_installer.exe
