on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Get version tag
        uses: little-core-labs/get-git-tag@v3.0.1
        id: version

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.5.1

      # darwin
      - name: Build for darwin
        if: matrix.platform == 'macos-latest'
        run: |
          wails build -f

      - name: Create darwin disk image
        if: matrix.platform == 'macos-latest'
        run: |
          brew install create-dmg
          create-dmg --volname "Ivy Git" --volicon "build/darwin/dmg_icon.icns" --background "build/darwin/dmg_bg.tiff" --window-size 512 320 --icon-size 100 --icon "Ivy Git.app" 100 185 --hide-extension "Ivy Git.app" --app-drop-link 388 185 "IvyGit_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg" "build/bin"

      - name: Upload darwin disk image
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: IvyGit_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg
          path: IvyGit_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg

      # darwin arm
      - name: Build for darwin
        if: matrix.platform == 'macos-latest'
        run: |
          wails build -f -platform darwin/arm64

      - name: Create darwin disk image
        if: matrix.platform == 'macos-latest'
        run: |
          brew install create-dmg
          create-dmg --volname "Ivy Git" --volicon "build/darwin/dmg_icon.icns" --background "build/darwin/dmg_bg.tiff" --window-size 512 320 --icon-size 100 --icon "Ivy Git.app" 100 185 --hide-extension "Ivy Git.app" --app-drop-link 388 185 "IvyGit_${{ steps.version.outputs.tag }}_Darwin_arm64.dmg" "build/bin"

      - name: Upload darwin disk image
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: IvyGit_${{ steps.version.outputs.tag }}_Darwin_arm64.dmg
          path: IvyGit_${{ steps.version.outputs.tag }}_Darwin_arm64.dmg

      # windows
      - name: Build for windows
        if: matrix.platform == 'windows-latest'
        run: |
          wails build -f
          Compress-Archive -Path "$PWD\build\bin\ivy-git.exe" -DestinationPath "$PWD\IvyGit_${{ steps.version.outputs.tag }}_Windows_x86_64.zip"

      - name: Upload windows zip
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: IvyGit_${{ steps.version.outputs.tag }}_Windows_x86_64.zip
          path: IvyGit_${{ steps.version.outputs.tag }}_Windows_x86_64.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    name: Release
    steps:
      - name: Get version tag
        id: version
        run: echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Download all release pacakges
        uses: actions/download-artifact@v3
        id: artifact

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          draft: true
          prerelease: false
          files: |
            ${{steps.artifact.outputs.download-path}}/IvyGit_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg
            ${{steps.artifact.outputs.download-path}}/IvyGit_${{ steps.version.outputs.tag }}_Darwin_arm64.dmg
            ${{steps.artifact.outputs.download-path}}/IvyGit_${{ steps.version.outputs.tag }}_Windows_x86_64.zip
