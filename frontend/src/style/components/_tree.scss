@use "../mixins" as *;

$num-colors: 10;

.tree {
  padding: 0;
  min-width: 4rem;
  text-align: left;
  position: relative;
  pointer-events: none;
  @include no-select;

  &__graph {
    overflow-x: hidden;
    position: absolute;
    z-index: 150;
    --null-fade: 90%;

    &[data-fade] {
      -webkit-mask-image: linear-gradient(rgba(0 0 0 / 100%),rgba(0 0 0 / 100%) var(--null-fade), rgba(0 0 0 / 0%));
      mask-image: linear-gradient(rgba(0 0 0 / 100%),rgba(0 0 0 / 100%) var(--null-fade), rgba(0 0 0 / 0%));
    }
  }

  circle {
    pointer-events: all;
  }

  // Branches
  .b {
    stroke: red;
    stroke-width: 2px;
    fill: transparent;

    &.b-u {
      stroke: var(--color-branch-u-bg);
    }

    @for $c from 0 through $num-colors - 1 {
      &.b-#{$c} {
        stroke: var(--color-branch-#{$c}-bg);
      }
    }
  }

  // Vertices
  .v {
    fill: red;

    &.v-u {
      fill: var(--color-branch-u-bg);
    }

    @for $c from 0 through $num-colors - 1 {
      &.v-#{$c} {
        fill: var(--color-branch-#{$c}-bg);
      }
    }
  }

  .v2 {
    stroke: red;
    stroke-width: 2px;
    fill: orange;

    &.v-u {
      stroke: var(--color-branch-u-bg);
      fill: var(--color-branch-u-bg2);
    }

    @for $c from 0 through $num-colors - 1 {
      &.v-#{$c} {
        stroke: var(--color-branch-#{$c}-bg);
        fill: var(--color-branch-#{$c}-bg2);
      }
    }
  }
}


@for $c from 0 through $num-colors - 1 {
  .c-#{$c} {
    .refs {
      &__label {
        border-color: var(--color-branch-#{$c}-bg);
        background-color: var(--color-branch-#{$c}-bg--translucent) !important;
    
        &::after {
          background-color: var(--color-branch-#{$c}-bg--translucent) !important;
        }
      }

      &__line {
        background-color: var(--color-branch-#{$c}-bg--translucent) !important;
      }
    }
  }
}
