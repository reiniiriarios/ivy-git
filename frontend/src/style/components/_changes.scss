@use "../mixins" as *;

.changes {
  padding-top: 0.25rem;
  text-align: left;
  background-color: var(--color-changes-bg);
  flex: 2;
  overflow-y: auto;
  @include no-select;

  &__header {
    font-size: 0.9rem;
    color: var(--color-text-label);
    border-bottom: 1px solid var(--color-changes-border);
    display: flex;
    justify-content: space-between;

    &-section,
    &-stage-all .textbtn {
      vertical-align: middle;
      padding: 0.25rem 0.75rem;
    }

    &-stage-all {
      .textbtn {
        font-size: 0.9rem;
        color: var(--color-text-label);

        svg {
          margin-top: -0.125rem;
          fill: var(--color-text-label);
        }
      }

      &--stage .textbtn:hover {
        color: var(--color-stage-hover);

        svg {
          fill: var(--color-stage-hover);
        }
      }

      &--unstage .textbtn:hover {
        color: var(--color-unstage-hover);

        svg {
          fill: var(--color-unstage-hover);
        }
      }
    }
  }

  &__list {
    list-style: none;
    margin: 0 0 0.5rem;
    padding: 0;

    &--conflicts {
      .change__status {
        margin-right: 1rem;
      }
    }
  }
}

.change {
  display: flex;
  justify-content: left;
  align-items: stretch;
  border-bottom: 1px solid var(--color-changes-border);
  background-color: var(--color-changes-list-bg);
  min-height: 3rem;
  cursor: pointer;

  &--active {
    background-color: var(--color-changes-list-bg-hover);
  }

  &__stage {
    padding: 0.75rem;

    svg {
      margin-bottom: 0.125rem;
      vertical-align: middle;
      fill: var(--color-stage);

      .change--partial & {
        fill: var(--color-stage-partial);
      }

      .change--none & {
        fill: var(--color-stage-none);
      }
    }

    &:hover svg {
      fill: var(--color-stage-hover);
    }

    &--unstage:hover svg {
      fill: var(--color-unstage-hover);
    }

    .change--none & {
      pointer-events: none;
    }
  }

  &__file {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: center;
    padding: 0 0.5rem 0 1.5rem;
  }

  &__filename {
    display: flex;
    flex-direction: column;
  }

  &__dir {
    color: var(--color-text-label);
    font-size: 0.85rem;
  }

  &__oldfile {
    color: var(--color-text-label);
    font-size: 0.85rem;
  }

  &__status {
    position: relative;
    margin-left: auto;

    &::after {
      content: '';
      width: 1.15rem;
      height: 1.15rem;
      font-size: 0.85rem;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &--added {
      &::after {
        content: 'A';
        color: var(--color-status-added);
      }
    }

    &--copied {
      &::after {
        content: 'C';
        color: var(--color-status-copied);
      }
    }

    &--deleted {
      &::after {
        content: 'D';
        color: var(--color-status-deleted);
      }
    }

    &--modified {
      &::after {
        content: 'M';
        color: var(--color-status-modified);
      }
    }

    &--renamed {
      &::after {
        content: 'R';
        color: var(--color-status-renamed);
      }
    }

    &--type-changed {
      &::after {
        content: 'T';
        color: var(--color-status-type-changed);
      }
    }

    &--untracked {
      &::after {
        content: 'U';
        color: var(--color-status-untracked);
      }
    }

    &--ignored {
      &::after {
        content: '!';
        color: var(--color-status-ignored);
      }
    }

    &--not-updated {
      &::after {
        content: '-';
        color: var(--color-status-not-updated);
      }
    }

    &--unmerged {
      &::after {
        content: 'U';
        color: var(--color-status-unmerged);
      }

      &-deleted::after {
        content: 'D';
        color: var(--color-status-delted);
      }

      &-added::after {
        content: 'A';
        color: var(--color-status-added);
      }

      &-deleted-us::after,
      &-deleted-them::after {
        content: 'D';
        color: var(--color-status-deleted);
      }

      &-added-us::after,
      &-added-them::after {
        content: 'A';
        color: var(--color-status-added);
      }

      &-modified::after {
        content: 'M';
        color: var(--color-status-modified);
      }
    }

    &--unknown {
      background-color: #00f;

      &::after {
        content: 'X';
        color: #f00;
      }
    }
  }

  &--unresolved {
    background-color: var(--color-status-bg-unresolved);

    &.change--active {
      background-color: var(--color-status-bg-unresolved-active);
    }
  }
}
