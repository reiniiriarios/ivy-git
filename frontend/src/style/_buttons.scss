@use "mixins" as *;

.btn {
  border: var(--btn-border);
  color: var(--color-text);
  fill: var(--color-text);
  background-color: var(--color-btn-bg);
  font-size: 1rem;
  padding: 0.5rem 1rem;
  margin: 0;
  border-radius: 0.25rem;
  @include no-select;

  &--icon {
    display: inline-flex;
    justify-content: center;
    align-items: center;

    .icon {
      display: inline-flex;
      justify-content: center;
      align-items: center;

      &--hidden {
        display: none;
      }

      &--spin {
        animation: rotating 3s linear infinite;
      }
    }
  }

  & + & {
    margin-left: 0.25rem;
  }

  svg {
    margin-left: 0.5rem;
    vertical-align: middle;
  }

  &-sm {
    padding: 0.35rem 0.8rem;
    font-size: 0.9rem;

    svg {
      margin: 0 -0.2rem 0 0.25rem;
    }
  }

  &:not(:disabled) {
    cursor: pointer;
  }

  &:disabled {
    color: var(--color-btn-text-disabled);
    fill: var(--color-btn-text-disabled);
    background-color: var(--color-btn-bg-disabled);
  }

  &.active {
    background-color: var(--color-btn-bg-active);
  }

  &:hover:not(:disabled) {
    background-color: var(--color-btn-bg-hover);

    + .btn--arrow {
      background-color: var(--color-btn-bg-hover);
    }
  }

  &--apply {
    background-color: var(--color-btn-bg-green);

    &:disabled {
      color: var(--color-text-muted);
      fill: var(--color-text-muted);
      background-color: var(--color-btn-bg-disabled);
    }
  
    &:hover:not(:disabled) {
      background-color: var(--color-btn-bg-green-hover);
    }
  }

  &--delete {
    background-color: var(--color-btn-bg-red);

    &:disabled {
      color: var(--color-text-muted);
      fill: var(--color-text-muted);
      background-color: var(--color-btn-bg-disabled);
    }
  
    &:hover:not(:disabled) {
      background-color: var(--color-btn-bg-red-hover);
    }
  }

  // An !important override for buttons that would otherwise become a different color based on state.
  &--green {
    background-color: var(--color-btn-bg-green) !important;

    &:disabled {
      color: var(--color-text-muted);
      fill: var(--color-text-muted);
      background-color: var(--color-btn-bg-disabled) !important;
    }
  
    &:hover:not(:disabled) {
      background-color: var(--color-btn-bg-green-hover) !important;
    }
  }
}

.btn-arrow {
  display: flex;
  position: relative;

  &__optionscontainer {
    position: relative;
    z-index: 1000;
    display: none;
  }

  &__options {
    list-style: none;
    padding: 0;
    margin: 0;
    position: absolute;
    bottom: 2.3rem;
    left: -2rem;
    background-color: var(--color-btn-bg);
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }

  &__option {
    white-space: nowrap;
    padding: 0.5rem 0.75rem;
    @include no-select-click;
    border-bottom: 1px solid rgba(0 0 0 / 15%);

    &:first-child {
      border-top-left-radius: 0.25rem;
      border-top-right-radius: 0.25rem;
    }

    &:last-child {
      border-bottom-right-radius: 0.25rem;
    }

    &:hover {
      background-color: var(--color-btn-bg-hover);
    }
  }

  .btn {
    &__main {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &__arrow {
      flex: 2.25rem;
      margin-left: 0;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left: 1px solid rgba(0 0 0 / 25%);
      padding: 0.25rem;

      svg {
        margin: 0 0 0.2rem;
      }

      // Style to enable use when the main button is disabled, but
      // this button should still be usable, just needs to match style.
      &--faux-disabled {
        --color-text: var(--color-btn-text-disabled);

        // Will override if not in :not.
        &:not(:hover) {
          --color-btn-bg: var(--color-btn-bg-disabled);
        }

        &:hover {
          --color-btn-bg-hover: var(--color-btn-bg);
        }
      }
    }
  }

  &--open {
    .btn__arrow {
      border-top-right-radius: 0;
    }

    .btn-arrow__optionscontainer {
      display: block;
    }
  }
}

.textbtn {
  border: none;
  background: none;
  color: var(--color-text);
  font-size: 1rem;
  padding: 0.5rem 1rem;
  margin: 0;

  &:not(:disabled) {
    cursor: pointer;
  }

  svg {
    fill: var(--color-text);
    vertical-align: middle;
  }
}

.btn-drop {
  position: relative;
  border-radius: 0;
  border: none;

  &::after {
    content: "";
    @include carat-down;
    position: absolute;
    right: 1.5rem;
    width: 0.67rem;
    height: 0.67rem;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
  }

  &.active {
    &::after {
      @include carat-up;
    }
  }
}

.list-btn {
  text-align: left;
  border: 0;
  font-size: 0.9rem;
  padding: 0.6rem 0.75rem;
  margin: 0;
  background-color: transparent;
  color: var(--color-text);
  cursor: pointer;
  border-radius: 0;

  &:hover {
    background-color: var(--color-btn-bg-hover);
  }

  &.name {
    width: 100%;
  }

  &.x {
    padding-top: 0.4rem;

    &:hover {
      background-color: var(--color-btn-bg-red-hover);
    }
  }
}

.icon {
  &.success {
    fill: var(--color-text-success);
  }
}
